Lesson 2
Q #1
What happens when you initialize a repository? Why do you need to do it?
You are creating a empty git repository for your project files, it will have no entries. To begin version tracking
you will need to make a commit
Q #2
How is the staging area different from the working directory and the repository? What value do you think it offers?
The taging area contains the files you have selected for your git repo. Its provides a directory which allows you 
to view the files you have selected for inclusiion before you commit them to the repository.
Q #3
How can you use the staging area to make sure you have one commit per logical change?
Stage one commit at a time and used git fdiff --staged to compare and make sure only one chnage is ready to commit
Q #4
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
If more than one person is working on a project, if one project section requires additional work use branch to avoid production delays
split the project into section (branches) for different engineers to work on.
Branches for different languages for an app or website
Q #5
How do the diagrams help you visualize the branch structure? 
They show you the logical progression of commits and changes. They show you what data you can and cant reach from a branch
Q #6
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
We combine two sepetate development paths and drop the label to the orphan branch. 
we represent them in tree style so we can track which commits will be visible from the new master track
  
