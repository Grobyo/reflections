How did viewing a diff between two versions of a file help you see the bug that 
was introduced?
The file only shows the differences between two files, so its a much faster read.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It would be faster to trace back to the source of the error and eliminate it.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pro: You get to decide when to commit to match the logic of your code
cons: You delays in commit time my have a negative impact on the team waiting for your code.  

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    You are less likely to be working on different files in Google etc that are separate components 
	of a complete system     	

How can you use the commands git log and git diff to view the history of files?

    git log will give you the commit log code for each commit change made.
    once you have the logs for the problem commit and the one before it you can then review and make the changes
	to fix the problem.     	

How might using version control make you more confident to make changes that
could break something?

    It will be easier to revert back to a clean version of the code/program if/when the update throws an error 

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
